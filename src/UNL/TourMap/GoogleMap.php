<?php
class UNL_TourMap_GoogleMap
{
    /**
     * Center point for this map
     *
     * @var UNL_TourMap_LatLng
     */
    public $center;
    
    /**
     * A valid zoom level to start
     *
     * @var int
     */
    public $zoom = 16;
    
    /**
     * The min zoom level a user is allowed to see
     *
     * @var int
     */
    public $mapMinZoom = 0;
    
    /**
     * The max zoom level a user is allowed to see
     *
     * @var int
     */
    public $mapMaxZoom = 20;
    
    /**
     * The type of map to render.
     *
     * @var string ROADMAP|SATELLITE|HYBRID|TERRAIN
     */
    public $type;
    
    const MAPTYPE_ROADMAP   = 'roadmap';
    const MAPTYPE_SATELLITE = 'satellite';
    const MAPTYPE_HYBRID    = 'hybrid';
    const MAPTYPE_TERRAIN   = 'terrain';
    
    /**
     * All the points displayed on this map
     *
     * @var Iterator
     */
    public $markers;
    
    /**
     * XML file generated by the MapTiler program
     *
     * @var DomDocument()
     */
    public $tile_resource;

    public $options = array();

    function __construct($options = array())
    {
        $this->options = $options + $this->options;

        if (isset($options['center'])
            && false !== strpos($options['center'], ',')) {
            $coords = explode(',', $options['center']);
            $this->setCenter(new UNL_TourMap_LatLng(array('lat'=>$coords[0],'lng'=>$coords[1])));
        }
        
        if (isset($options['zoom'])) {
            $this->zoom = $options['zoom'];
        }
        
        $this->loadTileResource(UNL_TourMap::getFileRoot().'/www/images/tilesets/unl/tilemapresource.xml');
    }
    
    public function setCenter(UNL_TourMap_LatLng $center)
    {
        $this->center = $center;
        return $this;
    }

    public function setMarkers(Iterator $markers)
    {
        $this->markers = $markers;
        return $this;
    }

    function loadTileResource($filename)
    {
        //XML Config Vars
        $this->tile_resource = new DomDocument();
        $this->tile_resource->load($filename);
        
        $boundingBox = $this->tile_resource->getElementsByTagName('BoundingBox')->item(0);
        $this->options['minx'] = $boundingBox->getAttribute('minx');
        $this->options['miny'] = $boundingBox->getAttribute('miny');
        $this->options['maxx'] = $boundingBox->getAttribute('maxx');
        $this->options['maxy'] = $boundingBox->getAttribute('maxy');
        
        $tileSets = $this->tile_resource->getElementsByTagName('TileSet');
        $tileSetOrders = array();
        foreach ($tileSets as $tileSet) {
            array_push($tileSetOrders, $tileSet->getAttribute('order'));
        }
        $this->mapMinZoom = min($tileSetOrders);
        $this->mapMaxZoom = max($tileSetOrders);
        
        $tileFormat = $this->tile_resource->getElementsByTagName('TileFormat')->item(0);
        $this->options['tileWidth'] = $tileFormat->getAttribute('width');
        $this->options['tileHeight'] = $tileFormat->getAttribute('height');
        return $this;
    }
}